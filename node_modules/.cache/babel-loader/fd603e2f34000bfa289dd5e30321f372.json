{"remainingRequest":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/babel-loader/lib/index.js!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/validates/table.validate.js","dependencies":[{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/validates/table.validate.js","mtime":1583476762830},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKICogQEF1dGhvcjogeW91ciBuYW1lCiAqIEBEYXRlOiAyMDIwLTAzLTA1IDE2OjQ0OjA2CiAqIEBMYXN0RWRpdFRpbWU6IDIwMjAtMDMtMDUgMTc6MTQ6MDMKICogQExhc3RFZGl0b3JzOiBQbGVhc2Ugc2V0IExhc3RFZGl0b3JzCiAqIEBEZXNjcmlwdGlvbjogSW4gVXNlciBTZXR0aW5ncyBFZGl0CiAqIEBGaWxlUGF0aDogL2RhcC12dWUtdWkvcGFja2FnZXMvdmFsaWRhdGVzL3RhYmxlLnZhbGlkYXRlLmpzCiAqLwp2YXIgcmVxdWlyZWQgPSBmdW5jdGlvbiByZXF1aXJlZChwYXJhbSkgewogIHJldHVybiBmdW5jdGlvbiAodmFsdWUpIHsKICAgIGlmIChwYXJhbSAmJiBwYXJhbS5jb2x1bW5TZXQgJiYgdmFsdWUpIHsKICAgICAgdmFyIHJlcXVpcmVkQ29sdW1ucyA9IHBhcmFtLmNvbHVtblNldC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5yZXF1aXJlZDsKICAgICAgfSk7CgogICAgICBpZiAocmVxdWlyZWRDb2x1bW5zLmxlbmd0aCA+IDApIHsKICAgICAgICB2YXIgcmVzdWx0ID0gdHJ1ZTsKICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7CiAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gcmVxdWlyZWRDb2x1bW5zW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkgewogICAgICAgICAgICB2YXIgY29sdW1uID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgICBpZiAoIXJlc3VsdCkgewogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlOwogICAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7CiAgICAgICAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjIgPSB1bmRlZmluZWQ7CgogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSB2YWx1ZVtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwMjsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IChfc3RlcDIgPSBfaXRlcmF0b3IyLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZSkgewogICAgICAgICAgICAgICAgdmFyIGRhdGEgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICAgICAgICByZXN1bHQgPSB0eXBlb2YgZGF0YVtjb2x1bW4uZGF0YUNvZGVdICE9PSAndW5kZWZpbmVkJyAmJiBkYXRhW2NvbHVtbi5kYXRhQ29kZV0gIT09IG51bGwgJiYgZGF0YVtjb2x1bW4uZGF0YUNvZGVdLnRyaW0oKSAhPT0gJyc7CgogICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjIgPSB0cnVlOwogICAgICAgICAgICAgIF9pdGVyYXRvckVycm9yMiA9IGVycjsKICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiAmJiBfaXRlcmF0b3IyLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIucmV0dXJuKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjIpIHsKICAgICAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IyOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlOwogICAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRydWU7CiAgfTsKfTsKCnZhciB0YWJsZVZhbGlkYXRlciA9IHsKICByZXF1aXJlZDogcmVxdWlyZWQKfTsKZXhwb3J0IGRlZmF1bHQgdGFibGVWYWxpZGF0ZXI7"},{"version":3,"sources":["/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/validates/table.validate.js"],"names":["required","param","value","columnSet","requiredColumns","filter","item","length","result","column","data","dataCode","trim","tableValidater"],"mappings":"AAAA;;;;;;;;AAQA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SACb,UAACC,KAAD,EAAW;AACP,QAAID,KAAK,IAAIA,KAAK,CAACE,SAAf,IAA4BD,KAAhC,EAAuC;AACnC,UAAME,eAAe,GAAGH,KAAK,CAACE,SAAN,CAAgBE,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACN,QAAT;AAAA,OAA3B,CAAxB;;AACA,UAAII,eAAe,CAACG,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,YAAIC,MAAM,GAAG,IAAb;AAD4B;AAAA;AAAA;;AAAA;AAE5B,+BAAqBJ,eAArB,8HAAsC;AAAA,gBAA3BK,MAA2B;;AAClC,gBAAI,CAACD,MAAL,EAAa;AACT;AACH;;AAHiC;AAAA;AAAA;;AAAA;AAIlC,oCAAmBN,KAAnB,mIAA0B;AAAA,oBAAfQ,IAAe;AACtBF,gBAAAA,MAAM,GAAG,OAAOE,IAAI,CAACD,MAAM,CAACE,QAAR,CAAX,KAAiC,WAAjC,IAAgDD,IAAI,CAACD,MAAM,CAACE,QAAR,CAAJ,KAA0B,IAA1E,IAAkFD,IAAI,CAACD,MAAM,CAACE,QAAR,CAAJ,CAAsBC,IAAtB,OAAiC,EAA5H;;AACA,oBAAI,CAACJ,MAAL,EAAa;AACT;AACH;AACJ;AATiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUrC;AAZ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa5B,eAAOA,MAAP;AACH,OAdD,MAcO;AACH,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAvBY;AAAA,CAAjB;;AAwBA,IAAMK,cAAc,GAAG;AACnBb,EAAAA,QAAQ,EAARA;AADmB,CAAvB;AAIA,eAAea,cAAf","sourcesContent":["/*\n * @Author: your name\n * @Date: 2020-03-05 16:44:06\n * @LastEditTime: 2020-03-05 17:14:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /dap-vue-ui/packages/validates/table.validate.js\n */\nconst required = (param) =>\n    (value) => {\n        if (param && param.columnSet && value) {\n            const requiredColumns = param.columnSet.filter(item => item.required);\n            if (requiredColumns.length > 0) {\n                let result = true;\n                for (const column of requiredColumns) {\n                    if (!result) {\n                        break;\n                    }\n                    for (const data of value) {\n                        result = typeof data[column.dataCode] !== 'undefined' && data[column.dataCode] !== null && data[column.dataCode].trim() !== '';\n                        if (!result) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            } else {\n                return true;\n            }\n        }\n        return true;\n    }\nconst tableValidater = {\n    required\n};\n\nexport default tableValidater;\n"]}]}