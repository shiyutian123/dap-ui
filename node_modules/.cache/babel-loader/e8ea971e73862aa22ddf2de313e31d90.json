{"remainingRequest":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/babel-loader/lib/index.js!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/components/bpmn-process-flow/dap-ui-bpmn-process-flow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/components/bpmn-process-flow/dap-ui-bpmn-process-flow.vue","mtime":1583476762820},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["dap-ui-bpmn-process-flow.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Author: your name\n * @Date: 2020-03-01 14:05:31\n * @LastEditTime: 2020-03-01 17:36:59\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /dap-vue-ui/packages/components/bpmn-process-flow/dap-ui-bpmn-process-flow.vue\n -->\n<template>\n  <div class=\"bpmn-process-flow\">\n    <dap-ui-modal v-bind=\"modalConfig\" @ok=\"handleOk\" @cancel=\"handleCancel\">\n      <div class=\"process-flow-content\">\n        <div class=\"canvas\" id=\"js-canvas\"></div>\n      </div>\n      <div class=\"masking\" v-show=\"loading\">\n        <a-spin tip=\"流程图加载中...\" size=\"large\" />\n        <!-- <nz-spin nzSimple nzSize=\"large\" nzTip=\"脚本加载中...\"></nz-spin> -->\n      </div>\n    </dap-ui-modal>\n  </div>\n</template>\n\n<script>\nimport * as X2JS from \"x2js\";\n\nvar BpmnJS;\nexport default {\n  name: \"DapUiBpmnProcessFlow\",\n  props: {\n    extraProp: {\n      type: Object\n    },\n    loading: {\n      type: Boolean,\n      default: function() {\n        return false;\n      }\n    }\n  },\n  data() {\n    return {\n      primaryColor: 'rgb(48, 129, 251)',\n      modeler: undefined,\n      modalConfig: {\n        visible: false,\n        title: \"流程图\",\n        size: \"large\",\n        modalClass: \"dap-ui-bpmn-process-flow\"\n      }\n    };\n  },\n  methods: {\n    loadResources({ domain, callback }) {\n      this.modalConfig.visible = true;\n      this.$asyncLoadResource(\n        `${domain}/bpmn-js/diagram-js.css`,\n        \"link\",\n        \"diagram-js-css\"\n      ).then();\n      this.$asyncLoadResource(\n        `${domain}/bpmn-js/css/bpmn.css`,\n        \"link\",\n        \"bpmn-css\"\n      ).then();\n      this.$asyncLoadResource(\n        `${domain}/bpmn-js/bpmn-modeler.development.js`,\n        \"script\",\n        \"bpmnjs\"\n      ).then(() => {\n        BpmnJS = window.BpmnJS;\n        this.initBpmnCanvas();\n        callback && callback();\n      });\n    },\n    initBpmnCanvas() {\n      this.modeler = new BpmnJS({\n        container: \"#js-canvas\"\n      });\n      const bjsPoweredByDom = document.querySelectorAll(\".bjs-powered-by\")[0];\n      if (bjsPoweredByDom) {\n        bjsPoweredByDom.style.display = \"none\";\n      }\n      const djsPaletteDom = document.querySelectorAll(\".djs-palette\")[0];\n      if (djsPaletteDom) {\n        djsPaletteDom.style.display = \"none\";\n      }\n    },\n    importDiagramForJson(diagramJSON) {\n      const x2js = new X2JS();\n      const xml = x2js.js2xml(diagramJSON);\n      this.importDiagram(xml).then(() => {\n        setTimeout(() => {\n          const djsGroup = document.querySelectorAll(\".djs-group\");\n          for (let i = 0; i < djsGroup.length; i++) {\n            djsGroup[i].addEventListener(\"click\", e => {\n              e.stopPropagation();\n            });\n            djsGroup[i].addEventListener(\"dblclick\", e => {\n              e.stopPropagation();\n            });\n            djsGroup[i].addEventListener(\"mousedown\", e => {\n              e.stopPropagation();\n            });\n          }\n          const djsSegmentDraggers = document.querySelectorAll(\n            \".djs-segment-dragger\"\n          );\n          for (let i = 0; i < djsSegmentDraggers.length; i++) {\n            djsSegmentDraggers[i].addEventListener(\"click\", e => {\n              e.stopPropagation();\n            });\n            djsSegmentDraggers[i].addEventListener(\"dblclick\", e => {\n              e.stopPropagation();\n            });\n            djsSegmentDraggers[i].addEventListener(\"mousedown\", e => {\n              e.stopPropagation();\n            });\n          }\n          const rectDoms = document.getElementsByTagName(\"rect\");\n          for (let i = 0; i < rectDoms.length; i++) {\n            rectDoms[i].addEventListener(\"click\", e => {\n              e.stopPropagation();\n            });\n            rectDoms[i].addEventListener(\"dblclick\", e => {\n              e.stopPropagation();\n            });\n            rectDoms[i].addEventListener(\"mousedown\", e => {\n              e.stopPropagation();\n            });\n          }\n        });\n      });\n    },\n    importDiagram(diaramXML) {\n      return new Promise((resolve, reject) => {\n        this.modeler.importXML(diaramXML, err => {\n          if (err) {\n            reject(err);\n          }\n          const canvas = this.modeler.get(\"canvas\");\n          // zoom to fit full viewport\n          canvas.zoom(\"fit-viewport\");\n          resolve();\n        });\n      });\n    },\n    handleCancel() {\n      this.modalConfig.visible = false;\n      this.modeler.destroy();\n      this.modeler = undefined;\n    },\n    handleOk() {\n      this.modalConfig.visible = false;\n    },\n    fillColor() {\n      const nodePath = this.extraProp.nodePath;\n      if (!nodePath || nodePath.length === 0) {\n        return;\n      }\n      const shapeElements = document.querySelectorAll(\".djs-element.djs-shape\");\n      const connElements = document.querySelectorAll(\n        \".djs-element.djs-connection\"\n      );\n      // TODO: 替换流程节点的样式为产品样式\n      this.replaceNodeToCustom(\n        shapeElements,\n        this.extraProp.nodes\n      );\n      this.replaceConnToCustom();\n      this.replaceGatewayToCustom();\n\n      for (let i = 0; i < nodePath.length; i++) {\n        const node = nodePath[i];\n        for (let j = 0; j < shapeElements.length; j++) {\n          try {\n            if (\n              this.getEleDataId(shapeElements[j]) === node.to ||\n              this.getEleDataId(shapeElements[j])\n                .toUpperCase()\n                .indexOf(node.to) > -1\n            ) {\n              const djsVisualDom = shapeElements[j].querySelectorAll(\n                \".djs-visual\"\n              )[0];\n              if (node.to === \"START\" || node.to === \"END\") {\n                djsVisualDom.getElementsByTagName(\"circle\")[0].style.stroke =\n                  `${this.primaryColor}`;\n                djsVisualDom.getElementsByTagName(\"text\")[0].style.fill =\n                  `${this.primaryColor}`;\n              } else {\n                djsVisualDom.getElementsByTagName(\"rect\")[0].style.stroke =\n                  `${this.primaryColor}`;\n                if (djsVisualDom.getElementsByTagName(\"path\")[0]) {\n                  djsVisualDom.getElementsByTagName(\"path\")[0].style.fill =\n                    `${this.primaryColor}`;\n                }\n                djsVisualDom.getElementsByTagName(\"text\")[0].style.fill =\n                  \"rgb(255, 255, 255)\";\n              }\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n        const conns = this.extraProp.connects.filter(\n          item => item.endNodeId === node.to\n        );\n        conns.forEach(conn => {\n          if (conn.startNodeId.indexOf(\"ExclusiveGateway\") > -1) {\n            let exclusiveGateway = this.extraProp\n              .definitions.process.exclusiveGateway;\n            if (!Array.isArray(exclusiveGateway) && exclusiveGateway) {\n              exclusiveGateway = [exclusiveGateway];\n            }\n            exclusiveGateway = exclusiveGateway.filter(\n              item => item._id === conn.startNodeId\n            );\n            let bingonGatway, incoming, incomingConn;\n            for (const gatway of exclusiveGateway) {\n              if (bingonGatway) {\n                break;\n              }\n              incoming = exclusiveGateway.filter(\n                item => item._id === conn.startNodeId\n              )[0].incoming;\n              if (!Array.isArray(incoming) && incoming) {\n                incoming = [incoming];\n              }\n              incoming.forEach(inc => {\n                incomingConn = this.extraProp.connects.filter(\n                  item => item.connId === inc.__text\n                )[0];\n                if (incomingConn.startNodeId === node.from) {\n                  bingonGatway = gatway;\n                }\n              });\n            }\n            if (bingonGatway) {\n              for (let k = 0; k < shapeElements.length; k++) {\n                if (this.getEleDataId(shapeElements[k]) === bingonGatway._id) {\n                  const gDom = shapeElements[k].querySelectorAll(\n                    \".djs-visual\"\n                  )[0];\n                  gDom.getElementsByTagName(\"polygon\")[0].style.stroke =\n                    `${this.primaryColor}`;\n                  gDom.getElementsByTagName(\"path\")[0].style.fill =\n                    `${this.primaryColor}`;\n                  gDom.getElementsByTagName(\"path\")[0].style.stroke =\n                    `${this.primaryColor}`;\n                }\n              }\n              for (let k = 0; k < connElements.length; k++) {\n                if (\n                  this.getEleDataId(connElements[k]) === incomingConn.connId\n                ) {\n                  const djsVisualDom = connElements[k].querySelectorAll(\n                    \".djs-visual\"\n                  )[0];\n                  djsVisualDom.getElementsByTagName(\"path\")[0].style.stroke =\n                    `${this.primaryColor}`;\n                  djsVisualDom.getElementsByTagName(\"path\")[0].style[\n                    \"marker-end\"\n                  ] = `url(\"#sequenceflow-blue\")`;\n                }\n              }\n\n              let outgoing = bingonGatway.outgoing;\n              if (!Array.isArray(outgoing) && outgoing) {\n                outgoing = [outgoing];\n              }\n              outgoing = outgoing.filter(item => item.__text === conn.connId);\n              outgoing.forEach(out => {\n                const outgoingConn = this.extraProp.connects.filter(\n                  item => item.connId === out.__text\n                )[0];\n                if (outgoingConn && outgoingConn.endNodeId === node.to) {\n                  for (let k = 0; k < connElements.length; k++) {\n                    if (\n                      this.getEleDataId(connElements[k]) === outgoingConn.connId\n                    ) {\n                      const djsVisualDom = connElements[k].querySelectorAll(\n                        \".djs-visual\"\n                      )[0];\n                      const pathDom = djsVisualDom.getElementsByTagName(\n                        \"path\"\n                      )[0];\n                      pathDom.style.stroke = `${this.primaryColor}`;\n                      pathDom.style[\"marker-end\"] = `url(\"#sequenceflow-blue\")`;\n                      if (\n                        pathDom.style[\"marker-start\"] &&\n                        pathDom.style[\"marker-start\"].indexOf(\n                          \"conditional-default-flow-marker-white-gray\"\n                        ) > -1\n                      ) {\n                        pathDom.style[\n                          \"marker-start\"\n                        ] = `url(\"#conditional-default-flow-marker-white-blue\")`;\n                      }\n                    }\n                  }\n                }\n              });\n            }\n          } else {\n            for (let k = 0; k < connElements.length; k++) {\n              if (\n                this.getEleDataId(connElements[k]) === conn.connId &&\n                conn.startNodeId === node.from\n              ) {\n                const djsVisualDom = connElements[k].querySelectorAll(\n                  \".djs-visual\"\n                )[0];\n                djsVisualDom.getElementsByTagName(\"path\")[0].style.stroke =\n                  `${this.primaryColor}`;\n                djsVisualDom.getElementsByTagName(\"path\")[0].style[\n                  \"marker-end\"\n                ] = `url(\"#sequenceflow-blue\")`;\n              }\n            }\n          }\n        });\n      }\n    },\n    replaceNodeToCustom(shapeElements, nodePath) {\n      const svgDom = document\n        .getElementById(\"js-canvas\")\n        .getElementsByTagName(\"svg\")[0];\n      let defsDom = svgDom.getElementsByTagName(\"defs\")[0];\n      const linerGradientStr = `\n        <marker id=\"conditional-default-flow-marker-white-gray\" viewBox=\"0 0 20 20\" refX=\"0\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\"><path d=\"M 6 4 L 10 16\" style=\"fill: rgb(205, 205, 205); stroke-width: 1px; stroke-linecap: round; stroke-dasharray: 10000, 1; stroke: rgb(205, 205, 205);\"></path></marker>\n        <marker id=\"conditional-default-flow-marker-white-blue\" viewBox=\"0 0 20 20\" refX=\"0\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\"><path d=\"M 6 4 L 10 16\" style=\"fill: ${this.primaryColor}; stroke-width: 1px; stroke-linecap: round; stroke-dasharray: 10000, 1; stroke: ${this.primaryColor};\"></path></marker>\n        <marker id=\"sequenceflow-gray\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: rgb(205, 205, 205);fill: rgb(205, 205, 205);\"></circle>\n        </marker>\n        <marker id=\"sequenceflow-blue\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: ${this.primaryColor};fill: ${this.primaryColor};\"></circle>\n        </marker>\n        <marker id=\"sequenceflow-start\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#red-orange');fill: url('#red-orange');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow1\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node1');fill: url('#node1');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow2\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node2');fill: url('#node2');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow3\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node3');fill: url('#node3');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow4\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node4');fill: url('#node4');\"></circle>\n        </marker>\n        <linearGradient id=\"node1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(62,147,157);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(223,237,242);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"node2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(82,61,141);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,211,235);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"node3\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(44,124,239);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(185,222,252);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"node4\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(250,134,126);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,229,202);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"red-orange\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(255,90,0);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,255,0);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        `;\n      if (defsDom) {\n        defsDom.innerHTML = defsDom.innerHTML + linerGradientStr;\n      } else {\n        defsDom = document.createElement(\"defs\");\n        defsDom.innerHTML = linerGradientStr;\n        svgDom.appendChild(defsDom);\n      }\n      let nodeStep = 0;\n      const linerGradients = [\"node1\", \"node2\", \"node3\", \"node4\"];\n      for (let i = 0; i < shapeElements.length; i++) {\n        const shapeElement = shapeElements[i];\n        const elementId = this.getEleDataId(shapeElement);\n        if (elementId.indexOf(\"Participant_\") > -1) {\n          const djsVisualDom = shapeElement.querySelectorAll(\".djs-visual\")[0];\n          djsVisualDom.getElementsByTagName(\"rect\")[0].style.stroke = \"none\";\n          djsVisualDom.getElementsByTagName(\"polyline\")[0].style.stroke =\n            \"none\";\n        }\n        if (elementId.indexOf(\"Task_\") > -1) {\n          // 从nodes中找到对应的id的node\n          const node = nodePath.filter(item => item.nodeId === elementId)[0];\n          // 替换节点\n          const index = nodeStep++ % 4;\n          const linearGradient = linerGradients[index];\n          node.linearGradient = linearGradient;\n          node.markerEnd = `sequenceflow${index + 1}`;\n          let icon = ``;\n          if (node.nodeStatus === \"approving\") {\n            if (this.isIE()) {\n              icon = `<text lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 12px;font-weight: normal;fill: rgb(255, 0, 28);\"><tspan x=\"84\" y=\"4\">审批中</tspan></text>`;\n            } else {\n              icon = `<image x=\"90\" y=\"-5\" width=\"16\" xlink:href=\"./assets/approving.png\" />`;\n            }\n          } else if (typeof node.nodeStatus !== \"undefined\") {\n            if (this.isIE()) {\n              icon = `<text lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 12px;font-weight: normal;fill: rgb(137, 189, 119);\"><tspan x=\"84\" y=\"4\">通过</tspan></text>`;\n            } else {\n              icon = `<image x=\"90\" y=\"-5\" width=\"16\" xlink:href=\"./assets/approvePass.jpg\" />`;\n            }\n          }\n          const nodeStr = `<g class=\"djs-visual\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"2\" ry=\"2\" style=\"stroke: rgb(226, 226, 226);stroke-width: 2px;fill: white;\"></rect><path d=\"M0.5,27.5 L99.5,27.5 L99.5,2 C99.5,1.17157288 98.8284271,0.5 98,0.5 L2,0.5 C1.17157288,0.5 0.5,1.17157288 0.5,2 L0.5,27.5 Z\" style=\"\n                fill: rgb(226, 226, 226);\n                \"></path><text lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 12px;font-weight: normal;fill: rgb(140, 140, 140);\"><tspan x=\"10\" y=\"18\">${node.name}</tspan></text>${icon}<text x=\"10\" y=\"46\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(0, 0, 0);\">\n                <tspan>审批类型：${node.typeName}</tspan>\n                </text><text x=\"10\" y=\"68\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(0, 0, 0);\">\n                <tspan>审批人类型：${node.approveTypeMeaning}</tspan>\n                </text>\n                </g>`;\n          // const parser = new DOMParser();\n          // shapeElement.removeChild(shapeElement.querySelectorAll('.djs-visual')[0]);\n          // shapeElement.appendChild(parser.parseFromString(nodeStr, 'image/svg+xml').getElementsByTagName('g')[0]);\n          // shapeElement.innerHTML = nodeStr;\n\n          const dummy = document.createElement(\"div\");\n          dummy.innerHTML = \"<svg>\" + nodeStr + \"</svg>\";\n          const svgChildNodes = dummy.childNodes[0].childNodes;\n          shapeElement.removeChild(\n            shapeElement.querySelectorAll(\".djs-visual\")[0]\n          );\n          shapeElement.appendChild(svgChildNodes[0]);\n        }\n        if (\n          (elementId.indexOf(\"StartEvent_\") > -1 ||\n            elementId.indexOf(\"EndEvent_\") > -1) &&\n          elementId.indexOf(\"_label\") === -1\n        ) {\n          let nodeStr;\n          if (elementId.indexOf(\"StartEvent_\") > -1) {\n            // const name = this.extraProp.processName + '录入';\n            // nodeStr = `<g class=\"djs-visual\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"2\" ry=\"2\" style=\"stroke: url('#red-orange');stroke-width: 2px;fill: url('#red-orange');\"></rect>\n            // <rect x=\"10\" y=\"20\" width=\"80\" height=\"40\" rx=\"8\" ry=\"8\" style=\"\n            //     fill: rgba(0, 0, 0, .2);\n            // \"></rect>\n            // <text x=\"14\" y=\"44\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(255, 255, 255);\">${name}</text></g>`;\n            nodeStr = `<g class=\"djs-visual\"><circle cx=\"18\" cy=\"18\" r=\"18\" style=\"stroke: ${this.primaryColor};stroke-width: 2px;fill: white;fill-opacity: 0.95;\"></circle><text x=\"10\" y=\"21\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: ${this.primaryColor};\">开始</text></g>`;\n          } else {\n            // const name = '流程结束';\n            // nodeStr = `<g class=\"djs-visual\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"2\" ry=\"2\" style=\"stroke: url('#red-orange');stroke-width: 2px;fill: url('#red-orange');\"></rect>\n            // <rect x=\"10\" y=\"20\" width=\"80\" height=\"40\" rx=\"8\" ry=\"8\" style=\"\n            //     fill: rgba(0, 0, 0, .2);\n            // \"></rect>\n            // <text x=\"32\" y=\"45\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 10px;font-weight: normal;fill: rgb(255, 255, 255);\">${name}</text></g>`;\n            nodeStr = `<g class=\"djs-visual\"><circle cx=\"18\" cy=\"18\" r=\"18\" style=\"stroke: rgb(226, 226, 226);stroke-width: 2px;fill: white;fill-opacity: 0.95;\"></circle><text x=\"10\" y=\"21\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(226, 226, 226);\">结束</text></g>`;\n          }\n          // const transformArr = shapeElement.getAttribute('transform').split(' ');\n          // transformArr[transformArr.length - 1] = `${parseInt(transformArr[transformArr.length - 1].substr(0, transformArr[transformArr.length - 1].length - 1)) - 22})`;\n          // shapeElement.setAttribute('transform', transformArr.join(' '));\n\n          // shapeElement.innerHTML = nodeStr;\n\n          const dummy = document.createElement(\"div\");\n          dummy.innerHTML = \"<svg>\" + nodeStr + \"</svg>\";\n          const svgChildNodes = dummy.childNodes[0].childNodes;\n          shapeElement.removeChild(\n            shapeElement.querySelectorAll(\".djs-visual\")[0]\n          );\n          shapeElement.appendChild(svgChildNodes[0]);\n        } else if (elementId.indexOf(\"_label\") > -1) {\n          shapeElement\n            .querySelectorAll(\".djs-visual\")[0]\n            .getElementsByTagName(\"text\")[0].style.fill = \"transparent\";\n        }\n      }\n      // this.resetTaskNodeOffset(shapeElements);\n      // this.resetConnectionOffset();\n    },\n    replaceConnToCustom() {\n      const shapeElements = document.querySelectorAll(\n        \".djs-element.djs-connection\"\n      );\n      for (let i = 0; i < shapeElements.length; i++) {\n        const pathDom = shapeElements[i]\n          .querySelectorAll(\".djs-visual\")[0]\n          .getElementsByTagName(\"path\")[0];\n        pathDom.style.stroke = `rgb(236, 236, 236)`;\n        pathDom.style[\"marker-end\"] = `url('#sequenceflow-gray')`;\n        if (\n          pathDom.style[\"marker-start\"] &&\n          pathDom.style[\"marker-start\"].indexOf(\n            \"conditional-default-flow-marker-white-black\"\n          ) > -1\n        ) {\n          pathDom.style[\n            \"marker-start\"\n          ] = `url(\"#conditional-default-flow-marker-white-gray\")`;\n        }\n      }\n    },\n    replaceGatewayToCustom() {\n      const shapeElements = document.querySelectorAll(\".djs-element.djs-shape\");\n      for (let i = 0; i < shapeElements.length; i++) {\n        const shapeElement = shapeElements[i];\n        const elementId = this.getEleDataId(shapeElement);\n        if (elementId.indexOf(\"Gateway\") > -1) {\n          const djsConnVisualDom = shapeElement.querySelectorAll(\n            \".djs-visual\"\n          )[0];\n          djsConnVisualDom.getElementsByTagName(\"polygon\")[0].style.stroke =\n            \"rgb(226, 226, 226)\";\n          djsConnVisualDom.getElementsByTagName(\"path\")[0].style.stroke =\n            \"rgb(226, 226, 226)\";\n          djsConnVisualDom.getElementsByTagName(\"path\")[0].style.fill =\n            \"rgb(226, 226, 226)\";\n        }\n      }\n    },\n    getEleDataId(ele) {\n      if (ele.dataset) {\n        return ele.dataset.elementId;\n      } else {\n        return ele.getAttribute(\"data-element-id\");\n      }\n    },\n    isIE() {\n      return \"ActiveXObject\" in window;\n    }\n  }\n};\n</script>\n<style src=\"./index.less\" lang=\"less\"></style>\n"],"sourceRoot":"packages/components/bpmn-process-flow"}]}