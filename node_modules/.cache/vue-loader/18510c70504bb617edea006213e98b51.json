{"remainingRequest":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/components/bpmn-process-flow/dap-ui-bpmn-process-flow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/packages/components/bpmn-process-flow/dap-ui-bpmn-process-flow.vue","mtime":1583476762820},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["dap-ui-bpmn-process-flow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dap-ui-bpmn-process-flow.vue","sourceRoot":"packages/components/bpmn-process-flow","sourcesContent":["<!--\n * @Author: your name\n * @Date: 2020-03-01 14:05:31\n * @LastEditTime: 2020-03-01 17:36:59\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /dap-vue-ui/packages/components/bpmn-process-flow/dap-ui-bpmn-process-flow.vue\n -->\n<template>\n  <div class=\"bpmn-process-flow\">\n    <dap-ui-modal v-bind=\"modalConfig\" @ok=\"handleOk\" @cancel=\"handleCancel\">\n      <div class=\"process-flow-content\">\n        <div class=\"canvas\" id=\"js-canvas\"></div>\n      </div>\n      <div class=\"masking\" v-show=\"loading\">\n        <a-spin tip=\"流程图加载中...\" size=\"large\" />\n        <!-- <nz-spin nzSimple nzSize=\"large\" nzTip=\"脚本加载中...\"></nz-spin> -->\n      </div>\n    </dap-ui-modal>\n  </div>\n</template>\n\n<script>\nimport * as X2JS from \"x2js\";\n\nvar BpmnJS;\nexport default {\n  name: \"DapUiBpmnProcessFlow\",\n  props: {\n    extraProp: {\n      type: Object\n    },\n    loading: {\n      type: Boolean,\n      default: function() {\n        return false;\n      }\n    }\n  },\n  data() {\n    return {\n      primaryColor: 'rgb(48, 129, 251)',\n      modeler: undefined,\n      modalConfig: {\n        visible: false,\n        title: \"流程图\",\n        size: \"large\",\n        modalClass: \"dap-ui-bpmn-process-flow\"\n      }\n    };\n  },\n  methods: {\n    loadResources({ domain, callback }) {\n      this.modalConfig.visible = true;\n      this.$asyncLoadResource(\n        `${domain}/bpmn-js/diagram-js.css`,\n        \"link\",\n        \"diagram-js-css\"\n      ).then();\n      this.$asyncLoadResource(\n        `${domain}/bpmn-js/css/bpmn.css`,\n        \"link\",\n        \"bpmn-css\"\n      ).then();\n      this.$asyncLoadResource(\n        `${domain}/bpmn-js/bpmn-modeler.development.js`,\n        \"script\",\n        \"bpmnjs\"\n      ).then(() => {\n        BpmnJS = window.BpmnJS;\n        this.initBpmnCanvas();\n        callback && callback();\n      });\n    },\n    initBpmnCanvas() {\n      this.modeler = new BpmnJS({\n        container: \"#js-canvas\"\n      });\n      const bjsPoweredByDom = document.querySelectorAll(\".bjs-powered-by\")[0];\n      if (bjsPoweredByDom) {\n        bjsPoweredByDom.style.display = \"none\";\n      }\n      const djsPaletteDom = document.querySelectorAll(\".djs-palette\")[0];\n      if (djsPaletteDom) {\n        djsPaletteDom.style.display = \"none\";\n      }\n    },\n    importDiagramForJson(diagramJSON) {\n      const x2js = new X2JS();\n      const xml = x2js.js2xml(diagramJSON);\n      this.importDiagram(xml).then(() => {\n        setTimeout(() => {\n          const djsGroup = document.querySelectorAll(\".djs-group\");\n          for (let i = 0; i < djsGroup.length; i++) {\n            djsGroup[i].addEventListener(\"click\", e => {\n              e.stopPropagation();\n            });\n            djsGroup[i].addEventListener(\"dblclick\", e => {\n              e.stopPropagation();\n            });\n            djsGroup[i].addEventListener(\"mousedown\", e => {\n              e.stopPropagation();\n            });\n          }\n          const djsSegmentDraggers = document.querySelectorAll(\n            \".djs-segment-dragger\"\n          );\n          for (let i = 0; i < djsSegmentDraggers.length; i++) {\n            djsSegmentDraggers[i].addEventListener(\"click\", e => {\n              e.stopPropagation();\n            });\n            djsSegmentDraggers[i].addEventListener(\"dblclick\", e => {\n              e.stopPropagation();\n            });\n            djsSegmentDraggers[i].addEventListener(\"mousedown\", e => {\n              e.stopPropagation();\n            });\n          }\n          const rectDoms = document.getElementsByTagName(\"rect\");\n          for (let i = 0; i < rectDoms.length; i++) {\n            rectDoms[i].addEventListener(\"click\", e => {\n              e.stopPropagation();\n            });\n            rectDoms[i].addEventListener(\"dblclick\", e => {\n              e.stopPropagation();\n            });\n            rectDoms[i].addEventListener(\"mousedown\", e => {\n              e.stopPropagation();\n            });\n          }\n        });\n      });\n    },\n    importDiagram(diaramXML) {\n      return new Promise((resolve, reject) => {\n        this.modeler.importXML(diaramXML, err => {\n          if (err) {\n            reject(err);\n          }\n          const canvas = this.modeler.get(\"canvas\");\n          // zoom to fit full viewport\n          canvas.zoom(\"fit-viewport\");\n          resolve();\n        });\n      });\n    },\n    handleCancel() {\n      this.modalConfig.visible = false;\n      this.modeler.destroy();\n      this.modeler = undefined;\n    },\n    handleOk() {\n      this.modalConfig.visible = false;\n    },\n    fillColor() {\n      const nodePath = this.extraProp.nodePath;\n      if (!nodePath || nodePath.length === 0) {\n        return;\n      }\n      const shapeElements = document.querySelectorAll(\".djs-element.djs-shape\");\n      const connElements = document.querySelectorAll(\n        \".djs-element.djs-connection\"\n      );\n      // TODO: 替换流程节点的样式为产品样式\n      this.replaceNodeToCustom(\n        shapeElements,\n        this.extraProp.nodes\n      );\n      this.replaceConnToCustom();\n      this.replaceGatewayToCustom();\n\n      for (let i = 0; i < nodePath.length; i++) {\n        const node = nodePath[i];\n        for (let j = 0; j < shapeElements.length; j++) {\n          try {\n            if (\n              this.getEleDataId(shapeElements[j]) === node.to ||\n              this.getEleDataId(shapeElements[j])\n                .toUpperCase()\n                .indexOf(node.to) > -1\n            ) {\n              const djsVisualDom = shapeElements[j].querySelectorAll(\n                \".djs-visual\"\n              )[0];\n              if (node.to === \"START\" || node.to === \"END\") {\n                djsVisualDom.getElementsByTagName(\"circle\")[0].style.stroke =\n                  `${this.primaryColor}`;\n                djsVisualDom.getElementsByTagName(\"text\")[0].style.fill =\n                  `${this.primaryColor}`;\n              } else {\n                djsVisualDom.getElementsByTagName(\"rect\")[0].style.stroke =\n                  `${this.primaryColor}`;\n                if (djsVisualDom.getElementsByTagName(\"path\")[0]) {\n                  djsVisualDom.getElementsByTagName(\"path\")[0].style.fill =\n                    `${this.primaryColor}`;\n                }\n                djsVisualDom.getElementsByTagName(\"text\")[0].style.fill =\n                  \"rgb(255, 255, 255)\";\n              }\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n        const conns = this.extraProp.connects.filter(\n          item => item.endNodeId === node.to\n        );\n        conns.forEach(conn => {\n          if (conn.startNodeId.indexOf(\"ExclusiveGateway\") > -1) {\n            let exclusiveGateway = this.extraProp\n              .definitions.process.exclusiveGateway;\n            if (!Array.isArray(exclusiveGateway) && exclusiveGateway) {\n              exclusiveGateway = [exclusiveGateway];\n            }\n            exclusiveGateway = exclusiveGateway.filter(\n              item => item._id === conn.startNodeId\n            );\n            let bingonGatway, incoming, incomingConn;\n            for (const gatway of exclusiveGateway) {\n              if (bingonGatway) {\n                break;\n              }\n              incoming = exclusiveGateway.filter(\n                item => item._id === conn.startNodeId\n              )[0].incoming;\n              if (!Array.isArray(incoming) && incoming) {\n                incoming = [incoming];\n              }\n              incoming.forEach(inc => {\n                incomingConn = this.extraProp.connects.filter(\n                  item => item.connId === inc.__text\n                )[0];\n                if (incomingConn.startNodeId === node.from) {\n                  bingonGatway = gatway;\n                }\n              });\n            }\n            if (bingonGatway) {\n              for (let k = 0; k < shapeElements.length; k++) {\n                if (this.getEleDataId(shapeElements[k]) === bingonGatway._id) {\n                  const gDom = shapeElements[k].querySelectorAll(\n                    \".djs-visual\"\n                  )[0];\n                  gDom.getElementsByTagName(\"polygon\")[0].style.stroke =\n                    `${this.primaryColor}`;\n                  gDom.getElementsByTagName(\"path\")[0].style.fill =\n                    `${this.primaryColor}`;\n                  gDom.getElementsByTagName(\"path\")[0].style.stroke =\n                    `${this.primaryColor}`;\n                }\n              }\n              for (let k = 0; k < connElements.length; k++) {\n                if (\n                  this.getEleDataId(connElements[k]) === incomingConn.connId\n                ) {\n                  const djsVisualDom = connElements[k].querySelectorAll(\n                    \".djs-visual\"\n                  )[0];\n                  djsVisualDom.getElementsByTagName(\"path\")[0].style.stroke =\n                    `${this.primaryColor}`;\n                  djsVisualDom.getElementsByTagName(\"path\")[0].style[\n                    \"marker-end\"\n                  ] = `url(\"#sequenceflow-blue\")`;\n                }\n              }\n\n              let outgoing = bingonGatway.outgoing;\n              if (!Array.isArray(outgoing) && outgoing) {\n                outgoing = [outgoing];\n              }\n              outgoing = outgoing.filter(item => item.__text === conn.connId);\n              outgoing.forEach(out => {\n                const outgoingConn = this.extraProp.connects.filter(\n                  item => item.connId === out.__text\n                )[0];\n                if (outgoingConn && outgoingConn.endNodeId === node.to) {\n                  for (let k = 0; k < connElements.length; k++) {\n                    if (\n                      this.getEleDataId(connElements[k]) === outgoingConn.connId\n                    ) {\n                      const djsVisualDom = connElements[k].querySelectorAll(\n                        \".djs-visual\"\n                      )[0];\n                      const pathDom = djsVisualDom.getElementsByTagName(\n                        \"path\"\n                      )[0];\n                      pathDom.style.stroke = `${this.primaryColor}`;\n                      pathDom.style[\"marker-end\"] = `url(\"#sequenceflow-blue\")`;\n                      if (\n                        pathDom.style[\"marker-start\"] &&\n                        pathDom.style[\"marker-start\"].indexOf(\n                          \"conditional-default-flow-marker-white-gray\"\n                        ) > -1\n                      ) {\n                        pathDom.style[\n                          \"marker-start\"\n                        ] = `url(\"#conditional-default-flow-marker-white-blue\")`;\n                      }\n                    }\n                  }\n                }\n              });\n            }\n          } else {\n            for (let k = 0; k < connElements.length; k++) {\n              if (\n                this.getEleDataId(connElements[k]) === conn.connId &&\n                conn.startNodeId === node.from\n              ) {\n                const djsVisualDom = connElements[k].querySelectorAll(\n                  \".djs-visual\"\n                )[0];\n                djsVisualDom.getElementsByTagName(\"path\")[0].style.stroke =\n                  `${this.primaryColor}`;\n                djsVisualDom.getElementsByTagName(\"path\")[0].style[\n                  \"marker-end\"\n                ] = `url(\"#sequenceflow-blue\")`;\n              }\n            }\n          }\n        });\n      }\n    },\n    replaceNodeToCustom(shapeElements, nodePath) {\n      const svgDom = document\n        .getElementById(\"js-canvas\")\n        .getElementsByTagName(\"svg\")[0];\n      let defsDom = svgDom.getElementsByTagName(\"defs\")[0];\n      const linerGradientStr = `\n        <marker id=\"conditional-default-flow-marker-white-gray\" viewBox=\"0 0 20 20\" refX=\"0\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\"><path d=\"M 6 4 L 10 16\" style=\"fill: rgb(205, 205, 205); stroke-width: 1px; stroke-linecap: round; stroke-dasharray: 10000, 1; stroke: rgb(205, 205, 205);\"></path></marker>\n        <marker id=\"conditional-default-flow-marker-white-blue\" viewBox=\"0 0 20 20\" refX=\"0\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\"><path d=\"M 6 4 L 10 16\" style=\"fill: ${this.primaryColor}; stroke-width: 1px; stroke-linecap: round; stroke-dasharray: 10000, 1; stroke: ${this.primaryColor};\"></path></marker>\n        <marker id=\"sequenceflow-gray\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: rgb(205, 205, 205);fill: rgb(205, 205, 205);\"></circle>\n        </marker>\n        <marker id=\"sequenceflow-blue\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: ${this.primaryColor};fill: ${this.primaryColor};\"></circle>\n        </marker>\n        <marker id=\"sequenceflow-start\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#red-orange');fill: url('#red-orange');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow1\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node1');fill: url('#node1');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow2\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node2');fill: url('#node2');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow3\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node3');fill: url('#node3');\"></circle>\n        </marker>\n        <marker id=\"sequenceflow4\" viewBox=\"0 0 20 20\" refX=\"11\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\" orient=\"auto\">\n            <circle cx=\"6\" cy=\"10\" r=\"4.5\" style=\"stroke: url('#node4');fill: url('#node4');\"></circle>\n        </marker>\n        <linearGradient id=\"node1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(62,147,157);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(223,237,242);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"node2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(82,61,141);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,211,235);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"node3\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(44,124,239);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(185,222,252);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"node4\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(250,134,126);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,229,202);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"red-orange\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" style=\"stop-color:rgb(255,90,0);\n            stop-opacity:1\"></stop>\n            <stop offset=\"100%\" style=\"stop-color:rgb(255,255,0);\n            stop-opacity:1\"></stop>\n        </linearGradient>\n        `;\n      if (defsDom) {\n        defsDom.innerHTML = defsDom.innerHTML + linerGradientStr;\n      } else {\n        defsDom = document.createElement(\"defs\");\n        defsDom.innerHTML = linerGradientStr;\n        svgDom.appendChild(defsDom);\n      }\n      let nodeStep = 0;\n      const linerGradients = [\"node1\", \"node2\", \"node3\", \"node4\"];\n      for (let i = 0; i < shapeElements.length; i++) {\n        const shapeElement = shapeElements[i];\n        const elementId = this.getEleDataId(shapeElement);\n        if (elementId.indexOf(\"Participant_\") > -1) {\n          const djsVisualDom = shapeElement.querySelectorAll(\".djs-visual\")[0];\n          djsVisualDom.getElementsByTagName(\"rect\")[0].style.stroke = \"none\";\n          djsVisualDom.getElementsByTagName(\"polyline\")[0].style.stroke =\n            \"none\";\n        }\n        if (elementId.indexOf(\"Task_\") > -1) {\n          // 从nodes中找到对应的id的node\n          const node = nodePath.filter(item => item.nodeId === elementId)[0];\n          // 替换节点\n          const index = nodeStep++ % 4;\n          const linearGradient = linerGradients[index];\n          node.linearGradient = linearGradient;\n          node.markerEnd = `sequenceflow${index + 1}`;\n          let icon = ``;\n          if (node.nodeStatus === \"approving\") {\n            if (this.isIE()) {\n              icon = `<text lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 12px;font-weight: normal;fill: rgb(255, 0, 28);\"><tspan x=\"84\" y=\"4\">审批中</tspan></text>`;\n            } else {\n              icon = `<image x=\"90\" y=\"-5\" width=\"16\" xlink:href=\"./assets/approving.png\" />`;\n            }\n          } else if (typeof node.nodeStatus !== \"undefined\") {\n            if (this.isIE()) {\n              icon = `<text lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 12px;font-weight: normal;fill: rgb(137, 189, 119);\"><tspan x=\"84\" y=\"4\">通过</tspan></text>`;\n            } else {\n              icon = `<image x=\"90\" y=\"-5\" width=\"16\" xlink:href=\"./assets/approvePass.jpg\" />`;\n            }\n          }\n          const nodeStr = `<g class=\"djs-visual\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"2\" ry=\"2\" style=\"stroke: rgb(226, 226, 226);stroke-width: 2px;fill: white;\"></rect><path d=\"M0.5,27.5 L99.5,27.5 L99.5,2 C99.5,1.17157288 98.8284271,0.5 98,0.5 L2,0.5 C1.17157288,0.5 0.5,1.17157288 0.5,2 L0.5,27.5 Z\" style=\"\n                fill: rgb(226, 226, 226);\n                \"></path><text lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 12px;font-weight: normal;fill: rgb(140, 140, 140);\"><tspan x=\"10\" y=\"18\">${node.name}</tspan></text>${icon}<text x=\"10\" y=\"46\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(0, 0, 0);\">\n                <tspan>审批类型：${node.typeName}</tspan>\n                </text><text x=\"10\" y=\"68\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(0, 0, 0);\">\n                <tspan>审批人类型：${node.approveTypeMeaning}</tspan>\n                </text>\n                </g>`;\n          // const parser = new DOMParser();\n          // shapeElement.removeChild(shapeElement.querySelectorAll('.djs-visual')[0]);\n          // shapeElement.appendChild(parser.parseFromString(nodeStr, 'image/svg+xml').getElementsByTagName('g')[0]);\n          // shapeElement.innerHTML = nodeStr;\n\n          const dummy = document.createElement(\"div\");\n          dummy.innerHTML = \"<svg>\" + nodeStr + \"</svg>\";\n          const svgChildNodes = dummy.childNodes[0].childNodes;\n          shapeElement.removeChild(\n            shapeElement.querySelectorAll(\".djs-visual\")[0]\n          );\n          shapeElement.appendChild(svgChildNodes[0]);\n        }\n        if (\n          (elementId.indexOf(\"StartEvent_\") > -1 ||\n            elementId.indexOf(\"EndEvent_\") > -1) &&\n          elementId.indexOf(\"_label\") === -1\n        ) {\n          let nodeStr;\n          if (elementId.indexOf(\"StartEvent_\") > -1) {\n            // const name = this.extraProp.processName + '录入';\n            // nodeStr = `<g class=\"djs-visual\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"2\" ry=\"2\" style=\"stroke: url('#red-orange');stroke-width: 2px;fill: url('#red-orange');\"></rect>\n            // <rect x=\"10\" y=\"20\" width=\"80\" height=\"40\" rx=\"8\" ry=\"8\" style=\"\n            //     fill: rgba(0, 0, 0, .2);\n            // \"></rect>\n            // <text x=\"14\" y=\"44\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(255, 255, 255);\">${name}</text></g>`;\n            nodeStr = `<g class=\"djs-visual\"><circle cx=\"18\" cy=\"18\" r=\"18\" style=\"stroke: ${this.primaryColor};stroke-width: 2px;fill: white;fill-opacity: 0.95;\"></circle><text x=\"10\" y=\"21\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: ${this.primaryColor};\">开始</text></g>`;\n          } else {\n            // const name = '流程结束';\n            // nodeStr = `<g class=\"djs-visual\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"80\" rx=\"2\" ry=\"2\" style=\"stroke: url('#red-orange');stroke-width: 2px;fill: url('#red-orange');\"></rect>\n            // <rect x=\"10\" y=\"20\" width=\"80\" height=\"40\" rx=\"8\" ry=\"8\" style=\"\n            //     fill: rgba(0, 0, 0, .2);\n            // \"></rect>\n            // <text x=\"32\" y=\"45\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 10px;font-weight: normal;fill: rgb(255, 255, 255);\">${name}</text></g>`;\n            nodeStr = `<g class=\"djs-visual\"><circle cx=\"18\" cy=\"18\" r=\"18\" style=\"stroke: rgb(226, 226, 226);stroke-width: 2px;fill: white;fill-opacity: 0.95;\"></circle><text x=\"10\" y=\"21\" lineheight=\"1.2\" class=\"djs-label\" style=\"font-family: Arial, sans-serif;font-size: 8px;font-weight: normal;fill: rgb(226, 226, 226);\">结束</text></g>`;\n          }\n          // const transformArr = shapeElement.getAttribute('transform').split(' ');\n          // transformArr[transformArr.length - 1] = `${parseInt(transformArr[transformArr.length - 1].substr(0, transformArr[transformArr.length - 1].length - 1)) - 22})`;\n          // shapeElement.setAttribute('transform', transformArr.join(' '));\n\n          // shapeElement.innerHTML = nodeStr;\n\n          const dummy = document.createElement(\"div\");\n          dummy.innerHTML = \"<svg>\" + nodeStr + \"</svg>\";\n          const svgChildNodes = dummy.childNodes[0].childNodes;\n          shapeElement.removeChild(\n            shapeElement.querySelectorAll(\".djs-visual\")[0]\n          );\n          shapeElement.appendChild(svgChildNodes[0]);\n        } else if (elementId.indexOf(\"_label\") > -1) {\n          shapeElement\n            .querySelectorAll(\".djs-visual\")[0]\n            .getElementsByTagName(\"text\")[0].style.fill = \"transparent\";\n        }\n      }\n      // this.resetTaskNodeOffset(shapeElements);\n      // this.resetConnectionOffset();\n    },\n    replaceConnToCustom() {\n      const shapeElements = document.querySelectorAll(\n        \".djs-element.djs-connection\"\n      );\n      for (let i = 0; i < shapeElements.length; i++) {\n        const pathDom = shapeElements[i]\n          .querySelectorAll(\".djs-visual\")[0]\n          .getElementsByTagName(\"path\")[0];\n        pathDom.style.stroke = `rgb(236, 236, 236)`;\n        pathDom.style[\"marker-end\"] = `url('#sequenceflow-gray')`;\n        if (\n          pathDom.style[\"marker-start\"] &&\n          pathDom.style[\"marker-start\"].indexOf(\n            \"conditional-default-flow-marker-white-black\"\n          ) > -1\n        ) {\n          pathDom.style[\n            \"marker-start\"\n          ] = `url(\"#conditional-default-flow-marker-white-gray\")`;\n        }\n      }\n    },\n    replaceGatewayToCustom() {\n      const shapeElements = document.querySelectorAll(\".djs-element.djs-shape\");\n      for (let i = 0; i < shapeElements.length; i++) {\n        const shapeElement = shapeElements[i];\n        const elementId = this.getEleDataId(shapeElement);\n        if (elementId.indexOf(\"Gateway\") > -1) {\n          const djsConnVisualDom = shapeElement.querySelectorAll(\n            \".djs-visual\"\n          )[0];\n          djsConnVisualDom.getElementsByTagName(\"polygon\")[0].style.stroke =\n            \"rgb(226, 226, 226)\";\n          djsConnVisualDom.getElementsByTagName(\"path\")[0].style.stroke =\n            \"rgb(226, 226, 226)\";\n          djsConnVisualDom.getElementsByTagName(\"path\")[0].style.fill =\n            \"rgb(226, 226, 226)\";\n        }\n      }\n    },\n    getEleDataId(ele) {\n      if (ele.dataset) {\n        return ele.dataset.elementId;\n      } else {\n        return ele.getAttribute(\"data-element-id\");\n      }\n    },\n    isIE() {\n      return \"ActiveXObject\" in window;\n    }\n  }\n};\n</script>\n<style src=\"./index.less\" lang=\"less\"></style>\n"]}]}