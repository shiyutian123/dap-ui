{"remainingRequest":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/index.js!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-markdown-loader/lib/markdown-compiler.js??ref--15-1!/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/examples/docs/table.md?vue&type=template&id=167fd13b&","dependencies":[{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/examples/docs/table.md","mtime":1582109457001},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/coder/project/04_dap/lerna-dap/packages/dap-vue-ui/node_modules/vue-markdown-loader/lib/markdown-compiler.js","mtime":1581253301886}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}